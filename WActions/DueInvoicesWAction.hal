remote procedure RunUnpaidInvoiceMessage(record RcVc,string,record SMVc);

global
procedure DblBRCSendSMS(string dblstr,string l,Integer currepwn)
begin
  record SMVc SMr; 

  //Openwindow to specify text 

  OpenWindow("BRCSendSMSWClass",0,currepwn,"","",SMr);

  //On "Create" we will run through the report spec and find all the customers 
  
  return;
end;

global
procedure DblBRCSendEmail(string dblstr,string l,Integer currepwn)
begin
  record SMVc SMr; 
   
  //Openwindow to specify text  

  OpenWindow("BRCSendEmailWClass",0,currepwn,"","",SMr);

  //On "Create" we will run through the report spec and find all the customers 
  
  return;
end;

global
procedure DblBRCMarkSMS(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record SMVc SMr; 
  row SMVc SMrw; 
  Integer i,rwcnt;
  record CUVc CUr;
  Boolean foundf;

  wn = FindWindow("BRCSendSMSWClass");
  if (wn<=0) then begin
    wn =  OpenWindow("BRCSendSMSWClass",0,currepwn,"","",SMr);
  end;

  if (wn>0) then begin
    GetWindowRecord(wn,SMr);
    rwcnt = MatRowCnt(SMr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(SMr,i,SMrw);
      if (SMrw.Objects==l) then begin
        foundf = true;
        MatRowDelete(SMr,i);
        i = rwcnt; 
      end;
    end;
    if (!foundf) then begin
      CUr.Code = l;
      if (ReadFirstMain(CUr,1,true)) then begin
        ClearRow(SMr,SMrw,1);
        SMrw.Objects = CUr.Code;
        SMrw.Comment = CUr.Name;
        SMrw.ExtraComment = CUr.Phone;
        MatRowPut(SMr,rwcnt,SMrw); 
      end;     
    end;
    PutWindowRecord(wn,SMr);
  end;
  //On "Create" we will run through the report spec and find all the customers 
  
  return;
end;

global
procedure DblBRCMarkEmail(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record SMVc SMr; 
  row SMVc SMrw; 
  Integer i,rwcnt;
  record CUVc CUr;
  Boolean foundf;

  wn = FindWindow("BRCSendEmailWClass");
  if (wn<=0) then begin
    wn =  OpenWindow("BRCSendEmailWClass",0,currepwn,"","",SMr);
  end;
  if (wn>0) then begin
    GetWindowRecord(wn,SMr);
    rwcnt = MatRowCnt(SMr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(SMr,i,SMrw);
      if (SMrw.Objects==l) then begin
        foundf = true;
        MatRowDelete(SMr,i);
        i = rwcnt; 
      end;
    end;
    if (!foundf) then begin
      CUr.Code = l;
      if (ReadFirstMain(CUr,1,true)) then begin
        ClearRow(SMr,SMrw,1);
        SMrw.Objects = CUr.Code;
        SMrw.Comment = CUr.Name;
        SMrw.ExtraComment = CUr.eMail;
        MatRowPut(SMr,rwcnt,SMrw);   
      end;   
    end;
    PutWindowRecord(wn,SMr);
  end;
  //OpenWindow("BRCSendEmailWClass",0,currepwn,"","",SMr);

  //On "Create" we will run through the report spec and find all the customers 
  
  return;
end;


global
procedure BRCSendSMSWClassCreate()
begin
  Integer wn;
  record RcVc RepSpec;
  record SMVc SMr;

  wn = CurWindow;
  
  DeselectWindow(wn,true);
  GetWindowRecord(wn,SMr);
  GetWindowRecord(MotherWindow(wn),RepSpec);
  if (MatRowCnt(SMr)>0) then begin
    threadremoteasync.RunUnpaidInvoiceMessage(RepSpec,"sms",SMr);
  end;
  CloseWindow(wn);
  //remote call to server and close the window

  return;
end;

global
procedure BRCSendEmailWClassCreate()
begin
  Integer wn;
  record RcVc RepSpec;
  record SMVc SMr;

  wn = CurWindow;
  
  DeselectWindow(wn,true);
  GetWindowRecord(wn,SMr);
  GetWindowRecord(MotherWindow(wn),RepSpec);
  if (MatRowCnt(SMr)>0) then begin
    threadremoteasync.RunUnpaidInvoiceMessage(RepSpec,"email",SMr);
  end;
  CloseWindow(wn);
  //remote call to server and close the window

  return;
end;

/*
global
function Boolean ARRClassOnOkWindow(Integer wn)
begin
  record RcVc RepSpec;
  string 255 tstr;
  

  DeselectWindow(wn,false);
  GetWindowRecord(wn,RepSpec);
  if (RepSpec.ArtMode==2) then begin
    //RepSpec.Scaling = 0;//really?
    //RepSpec.BaseWidth = 800;
    //PutWindowRecord(wn,RepSpec);
  end;
  SelectWindow(wn);
  ARRClassOnOkWindow = true;
  return;
end;
*/